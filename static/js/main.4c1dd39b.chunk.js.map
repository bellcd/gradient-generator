{"version":3,"sources":["constants/gradient-constants.js","translations/messages.js","utils/gradient-utils.js","constants/breakpoints.js","StopPositions.js","Color.js","Colors.js","Flyout.js","constants/flyout-constants.js","App.js","reportWebVitals.js","index.js"],"names":["defaultColors","color","stopPositions","gradientWords","defaultGradientOptions","gradientType","degrees","endingShape","size","xPosition","yPosition","messages","ADD","X","FIRST","SECOND","CLOSE","OPEN","ADD_A_RANDOM_COLOR","GRADIENT_TYPE","LINEAR","RADIAL","CONIC","DEGREES","ENDING_SHAPE","CIRCLE","ELLIPSE","SIZE","CLOSEST_SIDE","FARTHEST_SIDE","CLOSEST_CORNER","FARTHEST_CORNER","X_POSITION","Y_POSITION","COLOR","TYPE_THE_COLOR","HEXADECIMAL_FORMAT_EXPLAINER","COLOR_PICKER","OPTIONAL_STOP_PERCENTS","DELETE_COLOR","FULLSCREEN","MessagesContext","React","createContext","makeGradientString","colors","gradientString","colorString","combineGradientColorStops","Math","round","reduce","acc","colorObj","i","makeGradientColorStops","length","allStops","currentStop","j","randomColorGenerator","alphanumeric","array","letters","random","floor","push","current","breakpoints","mobile","tablet","StopPositions","colorIndex","stopPercentChangeHandler","addOrRemoveStopPositionHandler","useContext","stopPositionsLength","onClick","disabled","map","position","type","name","id","value","trunc","onChange","min","max","htmlFor","Color","deleteColor","inputChangeHandler","isDisabled","onInput","pattern","Colors","className","colorsArray","Flyout","setColors","gradientOptions","setGradientOptions","resizingRef","useRef","isResizing","maxFlyoutWidth","useState","width","setWidth","useEffect","wrapperWidth","document","querySelector","clientWidth","throttledHandleResize","_throttle","window","innerWidth","addEventListener","calculateAndSetWidth","event","clientX","cleanup","throttledCalculateAndSetWidth","removeEventListener","style","onMouseDown","left","index","target","Number","toFixed","step","Prism","highlightAll","App","isFullScreen","setIsFullScreen","toggleFullScreen","key","currentFullScreenStatus","makeRandomPercentInRange","minAsInteger","range","Provider","colorIndexToChange","isAdd","positionToRemove","newColors","newStopPositions","filter","stopPositionIndex","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4c1dd39b.chunk.js","sourcesContent":["export const defaultColors = [\n  {\n    color: '#ff0000',\n    stopPositions: [0.20]\n  },\n  {\n    color: '#0000ff',\n    stopPositions: [0.50]\n  },\n  {\n    color: '#6ecbfb',\n    stopPositions: [0.80]\n  },\n];\n\nexport const inputPattern = '#[a-fA-F0-9]{6}';\n\n\n// TODO: better name?\nexport const gradientWords = {\n  RADIAL: 'radial',\n  LINEAR: 'linear',\n  CONIC: 'conic' ,\n  DEGREES: 'degrees',\n  ENDING_SHAPE: 'ending-shape',\n  SIZE: 'size',\n  X_POSITION: 'x-position',\n  Y_POSITION: 'y-position',\n  GRADIENT_TYPE: 'gradient-type',\n  CIRCLE: 'circle',\n  ELLIPSE: 'ellipse',\n  CLOSEST_SIDE: 'closest-side',\n  FARTHEST_SIDE: 'farthest-side',\n  CLOSEST_CORNER: 'closest-corner',\n  FARTHEST_CORNER: 'farthest-corner',\n}\n\nexport const defaultGradientOptions = {\n  gradientType: gradientWords.LINEAR,\n  degrees: 90,\n  endingShape: gradientWords.CIRCLE,\n  size: gradientWords.CLOSEST_SIDE,\n  xPosition: 0.50,\n  yPosition: 0.50,\n};","import React from 'react';\n\nconst messages = {\n    ADD: 'Add',\n    X: 'x',\n    FIRST: '1st',\n    SECOND: '2nd',\n    CLOSE: 'close',\n    OPEN: 'open',\n    ADD_A_RANDOM_COLOR: 'Add a random color',\n    GRADIENT_TYPE: 'Gradient Type',\n    LINEAR: 'linear',\n    RADIAL: 'radial',\n    CONIC: 'conic',\n    DEGREES: 'degrees',\n    ENDING_SHAPE: 'Ending Shape',\n    CIRCLE: 'Circle',\n    ELLIPSE: 'Ellipse',\n    SIZE: 'Size',\n    CLOSEST_SIDE: 'closest-side',\n    FARTHEST_SIDE: 'farthest-side',\n    CLOSEST_CORNER: 'closest-corner',\n    FARTHEST_CORNER: 'farthest-corner',\n    X_POSITION: 'x position %',\n    Y_POSITION: 'y position %',\n    COLOR: 'Color',\n    TYPE_THE_COLOR: 'Type the Color',\n    HEXADECIMAL_FORMAT_EXPLAINER: 'Hexadecimal format (ie, a \"#\", followed by exactly 6 characters. Those 6 characters must be either the digits 0 through 9, or one of the letters, a, b, c, d, e, or f',\n    COLOR_PICKER: 'Color Picker',\n    OPTIONAL_STOP_PERCENTS: 'Optional Stop Percents',\n    DELETE_COLOR: 'Delete Color',\n    FULLSCREEN: `Press 'Escape' to toggle full screen mode`\n};\n\nexport default messages;\n\nexport const MessagesContext = React.createContext({});","import { gradientWords } from \"../constants/gradient-constants\";\nconst { LINEAR, RADIAL, CONIC } = gradientWords;\n\nexport const makeGradientString = (colors, {\n  gradientType,\n  degrees,\n  endingShape,\n  size,\n  xPosition,\n  yPosition\n}) => {\n  const colorString = combineGradientColorStops(colors);\n  let gradientString;\n\n  if (gradientType === LINEAR) {\n    gradientString = `${LINEAR}-gradient(${degrees}deg, ${colorString})`;\n  } else if (gradientType === RADIAL) {\n    // TODO: improvement, allow using keywords (several spots)\n    // radial-gradient\n      // [ <ending-shape> || <size> ]? [ at <position> ]?, <color-stop-list>\n      // [ <ending-shape> || <size> ]? [ at <position> ]? ,<color-stop-list>\n      // <ending-shape> is either circle or ellipse\n      // if circle\n        // <size> must be a length (ie, not a percent)\n      // if ellipse\n        // <size> must be two percents, cannot be negative\n    gradientString = `${RADIAL}-gradient(${endingShape} ${size} at ${Math.round(xPosition * 100)}% ${Math.round(yPosition * 100)}%, ${colorString})`;\n  } else if (gradientType === CONIC) {\n    gradientString = `${CONIC}-gradient(from ${degrees}deg at ${Math.round(xPosition * 100)}% ${Math.round(yPosition * 100)}%, ${colorString})`;\n  }\n\n  return gradientString;\n};\n\nexport const combineGradientColorStops = colors => {\n  return colors.reduce((acc, colorObj, i) => {\n    return `${acc}${i === 0 ? '' : ', '}${colorObj.color}${makeGradientColorStops(colorObj)}`\n  }, '');\n};\n\nexport const makeGradientColorStops = colorObj => {\n  return colorObj.stopPositions.length > 0 ? (\n    colorObj.stopPositions.reduce((allStops, currentStop, j) => {\n      return `${allStops}${j === 0 ? '' : ' '}${currentStop * 100}%`\n    }, ' ')\n  ) : '';\n}\n\nexport const randomColorGenerator = () => {\n  const array = [];\n  const letters = ['a', 'b', 'c', 'd', 'e', 'f'];\n  let alphanumeric;\n  for (let i = 0; i < 6; i++) {\n    alphanumeric = Math.random() <= 0.5 ?\n      Math.floor(Math.random() * 10) :\n      letters[Math.floor(Math.random() * 6)]\n    array.push(alphanumeric);\n  }\n  return array.reduce((acc, current) => `${acc}${current}`, '#');\n}","const breakpoints = {\n    mobile: 500,\n    tablet: 750\n}\nexport default breakpoints;","import { Fragment, useContext } from 'react';\nimport { MessagesContext } from './translations/messages';\n\nconst StopPositions = ({\n  colorObj,\n  colorIndex,\n  stopPercentChangeHandler,\n  addOrRemoveStopPositionHandler\n}) => {\n  const {\n    ADD,\n    X,\n    FIRST,\n    SECOND\n  } = useContext(MessagesContext);\n\n  const stopPositionsLength = colorObj.stopPositions.length;\nreturn (\n  <div>\n    <button\n      onClick={addOrRemoveStopPositionHandler(colorIndex, true)}\n      disabled={stopPositionsLength === 2}\n      data-testid={`color-${colorIndex}-add-stop-position`}\n    >{ADD}</button>\n    {colorObj.stopPositions.map((position, j) => {\n      return (\n        <Fragment key={j}>\n          <input\n            type=\"number\"\n            name={`stop-position-${j}-color-${colorIndex}`}\n            id={`stop-position-${j}-color-${colorIndex}`}\n            value={stopPositionsLength === 0 ? '' : Math.trunc(position * 100)}\n            onChange={stopPercentChangeHandler(colorIndex, j)}\n            min=\"0\"\n            max=\"100\"\n            data-testid={`stop-position-${j}-color-${colorIndex}`}\n          ></input>\n          <label\n            htmlFor={`stop-position-${j}-color-${colorIndex}`}\n          >\n            {j === 0 ? FIRST : SECOND}\n          </label>\n          <button\n            onClick={addOrRemoveStopPositionHandler(colorIndex, false, j)}\n            data-testid={`stop-position-${j}-color-${colorIndex}-delete-button`}\n          >{X}</button>\n        </Fragment>\n      );\n    })}\n  </div>\n);\n};\n\nexport default StopPositions;","import StopPositions from './StopPositions';\nimport { inputPattern } from './constants/gradient-constants';\n\nconst Color = ({\n  colorObj,\n  colorIndex,\n  addOrRemoveStopPositionHandler,\n  stopPercentChangeHandler,\n  deleteColor,\n  inputChangeHandler,\n  isDisabled\n}) => {\n  return (\n    <>\n      <label htmlFor={`color-${colorIndex}-text-input`}>{`color-${colorIndex}`}</label>\n      <input\n        id={`color-${colorIndex}-text-input`}\n        type=\"text\"\n        name={`color-${colorIndex}-text-input`}\n        value={colorObj.color}\n        onInput={inputChangeHandler(colorIndex)}\n        pattern={inputPattern}\n      />\n      <div>\n        <label htmlFor={`color-${colorIndex}-color-picker`}></label>\n        <input\n          id={`color-${colorIndex}-color-picker`}\n          type=\"color\"\n          name={`color-${colorIndex}-color-picker`}\n          value={colorObj.color}\n          onInput={inputChangeHandler(colorIndex)}\n          data-testid={`color-${colorIndex}-color-picker`}\n        />\n      </div>\n      <StopPositions\n        colorObj={colorObj}\n        colorIndex={colorIndex}\n        addOrRemoveStopPositionHandler={addOrRemoveStopPositionHandler}\n        stopPercentChangeHandler={stopPercentChangeHandler}\n      />\n      <button\n        disabled={isDisabled}\n        onClick={deleteColor(colorIndex)}\n        data-testid={`color-${colorIndex}-delete-button`}\n      >x</button>\n    </>\n  );\n};\n\nexport default Color;\n","import React, { useContext } from 'react';\nimport Color from './Color';\nimport { MessagesContext } from './translations/messages';\nimport './Colors.css';\n\nconst Colors = ({\n  colors,\n  addOrRemoveStopPositionHandler,\n  stopPercentChangeHandler,\n  deleteColor,\n  inputChangeHandler\n}) => {\n  const {\n    COLOR,\n    TYPE_THE_COLOR,\n    HEXADECIMAL_FORMAT_EXPLAINER,\n    COLOR_PICKER,\n    OPTIONAL_STOP_PERCENTS,\n    DELETE_COLOR\n  } = useContext(MessagesContext);\n  return (\n    <div className=\"colors\">\n      <span>{COLOR}</span>\n      <span>\n        <div>{TYPE_THE_COLOR}</div>\n        {/* // TODO: this would be better in a popup */}\n        <div>{HEXADECIMAL_FORMAT_EXPLAINER}</div>\n      </span>\n      <span>{COLOR_PICKER}</span>\n      <span>{OPTIONAL_STOP_PERCENTS}</span>\n      <span>{DELETE_COLOR}</span>\n      {colors.map((colorObj, colorIndex, colorsArray) => {\n        return <Color\n          key={colorIndex}\n          colorObj={colorObj}\n          colorIndex={colorIndex}\n          addOrRemoveStopPositionHandler={addOrRemoveStopPositionHandler}\n          stopPercentChangeHandler={stopPercentChangeHandler}\n          deleteColor={deleteColor}\n          inputChangeHandler={inputChangeHandler}\n          isDisabled={colorsArray.length <= 2}\n        />\n      })}\n    </div>\n  );\n};\n\nexport default Colors;","import { useState, useContext, useRef, useEffect } from 'react';\nimport './Flyout.css';\nimport {\n  randomColorGenerator,\n  makeGradientString\n} from './utils/gradient-utils';\nimport { gradientWords } from './constants/gradient-constants';\nimport breakpoints from './constants/breakpoints';\nimport Colors from './Colors';\nimport { throttle as _throttle } from 'lodash';\nimport messages, { MessagesContext } from './translations/messages';\nimport { MAX_FLYOUT_WIDTH_PERCENT, FLYOUT_WIDTH_THROTTLE } from './constants/flyout-constants';\n\nconst Flyout = ({\n  colors,\n  setColors,\n  addOrRemoveStopPositionHandler,\n  stopPercentChangeHandler,\n  deleteColor,\n  gradientOptions,\n  setGradientOptions,\n}) => {\n  const {\n    ADD_A_RANDOM_COLOR,\n    GRADIENT_TYPE,\n    LINEAR,\n    RADIAL,\n    CONIC,\n    DEGREES,\n    ENDING_SHAPE,\n    CIRCLE,\n    ELLIPSE,\n    SIZE,\n    CLOSEST_SIDE,\n    FARTHEST_SIDE,\n    CLOSEST_CORNER,\n    FARTHEST_CORNER,\n    X_POSITION,\n    Y_POSITION\n  } = useContext(MessagesContext);\n\n  const resizingRef = useRef({ isResizing: false, maxFlyoutWidth: 0 });\n  const [width, setWidth] = useState(0);\n  \n  useEffect(() => {\n    const wrapperWidth = document.querySelector('.wrapper').clientWidth;\n    setWidth(Math.max(wrapperWidth / 2, breakpoints.mobile));\n    resizingRef.current.maxFlyoutWidth = wrapperWidth * MAX_FLYOUT_WIDTH_PERCENT;\n    const throttledHandleResize = _throttle(() => {\n      resizingRef.current.maxFlyoutWidth = Math.max(window.innerWidth * MAX_FLYOUT_WIDTH_PERCENT, breakpoints.mobile);\n    }, FLYOUT_WIDTH_THROTTLE);\n    window.addEventListener('resize', throttledHandleResize);\n    return throttledHandleResize;\n  }, []);\n\n  const inputChangeHandler = i => event => {\n    setColors(\n      colors.map((colorObj, index) => index === i ? {\n        ...colorObj,\n        color: event.target.value\n      } : colorObj)\n    );\n  }\n\n  const gradientString = makeGradientString(colors, gradientOptions);\n\n  const calculateAndSetWidth = event => {\n    if (!resizingRef.current.isResizing) return;\n    if (event.clientX < breakpoints.mobile) return;\n    if (event.clientX > resizingRef.current.maxFlyoutWidth) return;\n    setWidth(event.clientX);\n  };\n\n  const cleanup = () => {\n    if (!resizingRef.current.isResizing) return;\n    resizingRef.current.isResizing = false;\n  }\n\n  useEffect(() => {\n    const throttledCalculateAndSetWidth = _throttle(calculateAndSetWidth, FLYOUT_WIDTH_THROTTLE);\n    document.addEventListener('mousemove', throttledCalculateAndSetWidth);\n    document.addEventListener('mouseup', cleanup);\n    return () => {\n      document.removeEventListener('mousemove', throttledCalculateAndSetWidth);\n      document.removeEventListener('mouseup', cleanup);\n    };\n  }, [])\n\n  return (\n    <div\n      className=\"flyout\"\n      style={{ width }}\n      data-testid=\"flyout\"\n    >\n      <button\n        className=\"flyout__control-button\"\n        onMouseDown={() => resizingRef.current.isResizing = true}\n        style={{ left: `calc(${width}px)` }}\n        data-testid=\"flyout__control-button\"\n      >\n      </button>\n      <div className=\"flyout__content show-language toolbar\">\n        <div className=\"card\">\n          <pre>\n            <code className=\"language-css\">{gradientString}</code>\n          </pre>\n        </div>\n        <div className=\"options card\">\n          <Colors\n            colors={colors}\n            addOrRemoveStopPositionHandler={addOrRemoveStopPositionHandler}\n            stopPercentChangeHandler={stopPercentChangeHandler}\n            deleteColor={deleteColor}\n            inputChangeHandler={inputChangeHandler}\n          />\n          <button\n            onClick={() => {\n              setColors([...colors, {\n                color: randomColorGenerator(),\n                stopPositions: []\n              }])\n            }}\n          >\n            {ADD_A_RANDOM_COLOR}\n          </button>\n          <div>\n            <label htmlFor={gradientWords.GRADIENT_TYPE}>{GRADIENT_TYPE}</label>\n            <select\n              id={gradientWords.GRADIENT_TYPE}\n              name={gradientWords.GRADIENT_TYPE}\n              value={gradientOptions.gradientType}\n              onChange={event => setGradientOptions({\n                ...gradientOptions,\n                gradientType: event.target.value\n              })}\n            >\n              <option value={gradientWords.LINEAR}>{LINEAR}</option>\n              <option value={gradientWords.RADIAL}>{RADIAL}</option>\n              <option value={gradientWords.CONIC}>{CONIC}</option>\n            </select>\n          </div>\n          <div>\n            <div>\n              <label htmlFor={gradientWords.DEGREES}>{DEGREES}</label>\n              <input\n                id={gradientWords.DEGREES}\n                type=\"number\"\n                name={gradientWords.DEGREES}\n                value={gradientOptions.degrees}\n                onChange={event => { setGradientOptions({\n                  ...gradientOptions,\n                  degrees: event.target.value\n                })}}\n                disabled={gradientOptions.gradientType === gradientWords.RADIAL}\n                min={0}\n                max={360}\n              />\n            </div>\n            <div>\n              <label htmlFor={gradientWords.ENDING_SHAPE}>{ENDING_SHAPE}</label>\n              <select\n                id={gradientWords.ENDING_SHAPE}\n                name={gradientWords.ENDING_SHAPE}\n                value={gradientOptions.endingShape}\n                onChange={event => setGradientOptions({\n                  ...gradientOptions,\n                  endingShape: event.target.value\n                })}\n                disabled={gradientOptions.gradientType !== gradientWords.RADIAL}\n              >\n                <option value=\"circle\">{CIRCLE}</option>\n                <option value=\"ellipse\">{ELLIPSE}</option>\n              </select>\n            </div>\n            <div>\n              <label htmlFor={gradientWords.SIZE}>{SIZE}</label>\n              <select\n                id={gradientWords.SIZE}\n                type=\"text\"\n                name={gradientWords.SIZE}\n                value={gradientOptions.size}\n                onChange={event => { setGradientOptions({\n                  ...gradientOptions,\n                  size: event.target.value\n                })}}\n                disabled={gradientOptions.gradientType !== gradientWords.RADIAL}\n              >\n                <option>{CLOSEST_SIDE}</option>\n                <option>{FARTHEST_SIDE}</option>\n                <option>{CLOSEST_CORNER}</option>\n                <option>{FARTHEST_CORNER}</option>\n              </select>\n            </div>\n            <div>\n              <label htmlFor={gradientWords.X_POSITION}>{X_POSITION}</label>\n              <input\n                id={gradientWords.X_POSITION}\n                type=\"number\"\n                name={gradientWords.X_POSITION}\n                value={Math.round(gradientOptions.xPosition * 100)}\n                onChange={event => {\n                  setGradientOptions({\n                    ...gradientOptions,\n                    xPosition: Number((event.target.value / 100).toFixed(2))\n                  })\n                }}\n                min={0}\n                max={100}\n                step={1}\n                disabled={gradientOptions.gradientType === gradientWords.LINEAR}\n              />\n            </div>\n            <div>\n              <label htmlFor={gradientWords.Y_POSITION}>{Y_POSITION}</label>\n              <input\n                id={gradientWords.Y_POSITION}\n                type=\"number\"\n                name={gradientWords.Y_POSITION}\n                value={Math.round(gradientOptions.yPosition * 100)}\n                onChange={event => { setGradientOptions({\n                  ...gradientOptions,\n                  yPosition: Number((event.target.value / 100).toFixed(2))\n                })}}\n                min={0}\n                max={100}\n                step={1}\n                disabled={gradientOptions.gradientType === gradientWords.LINEAR}\n              />\n            </div>\n          </div>\n        <div>{messages.FULLSCREEN}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Flyout;\n","export const MAX_FLYOUT_WIDTH_PERCENT = 0.90;\nexport const FLYOUT_WIDTH_THROTTLE = 50;","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport {\n  defaultColors,\n  defaultGradientOptions\n} from './constants/gradient-constants';\nimport messages, { MessagesContext } from './translations/messages';\nimport Flyout from './Flyout';\nimport { makeGradientString } from './utils/gradient-utils';\nimport Prism from 'prismjs';\n\nPrism.highlightAll();\n\nfunction App() {\n  const [colors, setColors] = useState(defaultColors);\n  const [gradientOptions, setGradientOptions] = useState(defaultGradientOptions);\n  const gradientString = makeGradientString(colors, gradientOptions);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n\n  useEffect(() => {\n    const toggleFullScreen = event => {\n      if (event.key !== 'Escape') return;\n      setIsFullScreen(currentFullScreenStatus => !currentFullScreenStatus);\n    }\n    window.addEventListener('keyup', toggleFullScreen);\n    return () => window.removeEventListener('keyup', toggleFullScreen);\n  }, []);\n\n  const makeRandomPercentInRange = (min, max) => {\n    const minAsInteger = Math.round(min * 100);\n    const maxAsInteger = Math.round(max * 100);\n    const range = maxAsInteger - minAsInteger;\n    const percent = Math.round(\n      Math.random() * range + minAsInteger\n    ) / 100;\n    return percent;\n  }\n\n  const addOrRemoveStopPositionHandler = (colorIndexToChange, isAdd, positionToRemove) => () => {\n    const newColors = colors.map((colorObj, index) => {\n      if (index === colorIndexToChange) {\n        const stopPositions = colorObj.stopPositions;\n        let min = 0;\n          if (stopPositions.length > 0) {\n            min = stopPositions[stopPositions.length - 1];\n          } else if (index !== 0) {\n            for (let i = index - 1; i >= 0; i--) {\n              if (colors[i].stopPositions.length > 0) {\n                min = colors[i].stopPositions[colors[i].stopPositions.length - 1];\n                break;\n              }\n            }\n          }\n        let max = 1;\n          if (index !== colors.length - 1) {\n            for (let i = index + 1; i < colors.length; i++) {\n              if (colors[i].stopPositions.length > 0) {\n                max = colors[i].stopPositions[0];\n                break;\n              }\n            }\n          }\n\n        const newStopPositions = isAdd ? (\n          [...colorObj.stopPositions, makeRandomPercentInRange(min, max)]\n        ) : (\n          colorObj.stopPositions.filter((position, j) => j !== positionToRemove)\n        );\n\n        return {\n          ...colorObj,\n          stopPositions: newStopPositions\n        }\n      }\n      return colorObj;\n    });\n    setColors(newColors);\n  };\n\n  const stopPercentChangeHandler = (i, j) => event => {\n    const newColors = colors.map((colorObj, index) => {\n      if (index === i) {\n        return {\n          ...colorObj,\n          stopPositions: colorObj.stopPositions.map((position, stopPositionIndex) => {\n            return stopPositionIndex === j ? Number(event.target.value) / 100 : position\n          })\n        }\n      } else {\n        return colorObj;\n      }\n    });\n    setColors(newColors);\n  };\n\n  const deleteColor = i => () => {\n    setColors(colors.filter((color, index) => index !== i))\n  };\n\n  return (\n    <MessagesContext.Provider value={messages}>\n      <div className=\"wrapper\">\n        <Flyout\n          colors={colors}\n          setColors={setColors}\n          addOrRemoveStopPositionHandler={addOrRemoveStopPositionHandler}\n          stopPercentChangeHandler={stopPercentChangeHandler}\n          deleteColor={deleteColor}\n          gradientOptions={gradientOptions}\n          setGradientOptions={setGradientOptions}\n        />\n        <div\n          className={`gradient ${isFullScreen ? 'fullScreen' : '' }`}\n          style={{ background: gradientString }}\n          data-testid=\"gradient\"\n        />\n      </div>\n    </MessagesContext.Provider>\n  );\n}\n\nexport default App;\n\n// TODOs:\n  // toast notifications\n  // input validation\n    // type the color\n  // convert CSS to SCSS, might do styled components instead, not sure yet\n  // change the gradient mode\n    // repeating-linear-gradient\n    // repeating-radial-gradient\n  // add color stops\n    // color stop values can up / down arrow out of range, when there are other color stops present\n  // add color hints\n    // only valid between color stops\n  // inputs\n    // circle input for changing degrees\n  // polishing\n    // fonts\n    // icons\n  // mobile design\n  // randomizer\n  // change display formatting of gradientString\n    // conic-gradient(from 66deg at 37% 65%, #ff0000 1%, #0000ff 32%, #6ecbfb 55.00000000000001%, #8f0b29, #e0a7d7, #f8fcca, #eeffeb, #cde3cc, #fea75d, #cbc5e0)\n    // conic-gradient(\n    //   from 66deg at 37% 65%,\n    //     #ff0000 1%,\n    //     #0000ff 32%,\n    //     #6ecbfb 55.00000000000001%,\n    //     #8f0b29,\n    //     #e0a7d7,\n    //     #f8fcca,\n    //     #eeffeb,\n    //     #cde3cc,\n    //     #fea75d,\n    //     #cbc5e0\n    // )\n  // unit tests failing after ejecting","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}