{"version":3,"sources":["constants/gradient-constants.js","translations/messages.js","utils/gradient-utils.js","StopPositions.js","Color.js","Colors.js","Flyout.js","App.js","reportWebVitals.js","index.js"],"names":["defaultColors","color","stopPositions","gradientWords","defaultGradientOptions","gradientType","degrees","endingShape","size","xPosition","yPosition","messages","ADD","X","FIRST","SECOND","CLOSE","OPEN","ADD_A_RANDOM_COLOR","GRADIENT_TYPE","LINEAR","RADIAL","CONIC","DEGREES","ENDING_SHAPE","CIRCLE","ELLIPSE","SIZE","CLOSEST_SIDE","FARTHEST_SIDE","CLOSEST_CORNER","FARTHEST_CORNER","X_POSITION","Y_POSITION","COLOR","TYPE_THE_COLOR","HEXADECIMAL_FORMAT_EXPLAINER","COLOR_PICKER","OPTIONAL_STOP_PERCENTS","DELETE_COLOR","MessagesContext","React","createContext","makeGradientString","colors","gradientString","colorString","combineGradientColorStops","Math","round","reduce","acc","colorObj","i","makeGradientColorStops","length","allStops","currentStop","j","randomColorGenerator","alphanumeric","array","letters","random","floor","push","current","StopPositions","colorIndex","stopPercentChangeHandler","addOrRemoveStopPositionHandler","useContext","stopPositionsLength","onClick","disabled","map","position","type","name","id","value","trunc","onChange","min","max","htmlFor","Color","deleteColor","inputChangeHandler","isDisabled","onInput","pattern","Colors","className","colorsArray","Flyout","setColors","gradientOptions","setGradientOptions","useState","isFlyoutOpen","setIsFlyoutOpen","classnames","classNames","event","index","target","Number","toFixed","step","App","makeRandomPercentInRange","minAsInteger","range","Provider","colorIndexToChange","isAdd","positionToRemove","newColors","newStopPositions","filter","stopPositionIndex","style","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4e3778d.chunk.js","sourcesContent":["export const defaultColors = [\n  {\n    color: '#ff0000',\n    stopPositions: [0.20]\n  },\n  {\n    color: '#0000ff',\n    stopPositions: [0.50]\n  },\n  {\n    color: '#6ecbfb',\n    stopPositions: [0.80]\n  },\n];\n\nexport const inputPattern = '#[a-fA-F0-9]{6}';\n\n\n// TODO: better name?\nexport const gradientWords = {\n  RADIAL: 'radial',\n  LINEAR: 'linear',\n  CONIC: 'conic' ,\n  DEGREES: 'degrees',\n  ENDING_SHAPE: 'ending-shape',\n  SIZE: 'size',\n  X_POSITION: 'x-position',\n  Y_POSITION: 'y-position',\n  GRADIENT_TYPE: 'gradient-type',\n  CIRCLE: 'circle',\n  ELLIPSE: 'ellipse',\n  CLOSEST_SIDE: 'closest-side',\n  FARTHEST_SIDE: 'farthest-side',\n  CLOSEST_CORNER: 'closest-corner',\n  FARTHEST_CORNER: 'farthest-corner',\n}\n\nexport const defaultGradientOptions = {\n  gradientType: gradientWords.LINEAR,\n  degrees: 90,\n  endingShape: gradientWords.CIRCLE,\n  size: gradientWords.CLOSEST_SIDE,\n  xPosition: 0.50,\n  yPosition: 0.50,\n};","import React from 'react';\n\nconst messages = {\n    ADD: 'Add',\n    X: 'x',\n    FIRST: '1st',\n    SECOND: '2nd',\n    CLOSE: 'close',\n    OPEN: 'open',\n    ADD_A_RANDOM_COLOR: 'Add a random color',\n    GRADIENT_TYPE: 'Gradient Type',\n    LINEAR: 'linear',\n    RADIAL: 'radial',\n    CONIC: 'conic',\n    DEGREES: 'degrees',\n    ENDING_SHAPE: 'Ending Shape',\n    CIRCLE: 'Circle',\n    ELLIPSE: 'Ellipse',\n    SIZE: 'Size',\n    CLOSEST_SIDE: 'closest-side',\n    FARTHEST_SIDE: 'farthest-side',\n    CLOSEST_CORNER: 'closest-corner',\n    FARTHEST_CORNER: 'farthest-corner',\n    X_POSITION: 'x position %',\n    Y_POSITION: 'y position %',\n    COLOR: 'Color',\n    TYPE_THE_COLOR: 'Type the Color',\n    HEXADECIMAL_FORMAT_EXPLAINER: 'Hexadecimal format (ie, a \"#\", followed by exactly 6 characters. Those 6 characters must be either the digits 0 through 9, or one of the letters, a, b, c, d, e, or f',\n    COLOR_PICKER: 'Color Picker',\n    OPTIONAL_STOP_PERCENTS: 'Optional Stop Percents',\n    DELETE_COLOR: 'Delete Color',\n};\n\nexport default messages;\n\nexport const MessagesContext = React.createContext({});","import { gradientWords } from \"../constants/gradient-constants\";\nconst { LINEAR, RADIAL, CONIC } = gradientWords;\n\nexport const makeGradientString = (colors, {\n  gradientType,\n  degrees,\n  endingShape,\n  size,\n  xPosition,\n  yPosition\n}) => {\n  const colorString = combineGradientColorStops(colors);\n  let gradientString;\n\n  if (gradientType === LINEAR) {\n    gradientString = `${LINEAR}-gradient(${degrees}deg, ${colorString})`;\n  } else if (gradientType === RADIAL) {\n    // TODO: improvement, allow using keywords (several spots)\n    // radial-gradient\n      // [ <ending-shape> || <size> ]? [ at <position> ]?, <color-stop-list>\n      // [ <ending-shape> || <size> ]? [ at <position> ]? ,<color-stop-list>\n      // <ending-shape> is either circle or ellipse\n      // if circle\n        // <size> must be a length (ie, not a percent)\n      // if ellipse\n        // <size> must be two percents, cannot be negative\n    gradientString = `${RADIAL}-gradient(${endingShape} ${size} at ${Math.round(xPosition * 100)}% ${Math.round(yPosition * 100)}%, ${colorString})`;\n  } else if (gradientType === CONIC) {\n    gradientString = `${CONIC}-gradient(from ${degrees}deg at ${Math.round(xPosition * 100)}% ${Math.round(yPosition * 100)}%, ${colorString})`;\n  }\n\n  return gradientString;\n};\n\nexport const combineGradientColorStops = colors => {\n  return colors.reduce((acc, colorObj, i) => {\n    return `${acc}${i === 0 ? '' : ', '}${colorObj.color}${makeGradientColorStops(colorObj)}`\n  }, '');\n};\n\nexport const makeGradientColorStops = colorObj => {\n  return colorObj.stopPositions.length > 0 ? (\n    colorObj.stopPositions.reduce((allStops, currentStop, j) => {\n      return `${allStops}${j === 0 ? '' : ' '}${currentStop * 100}%`\n    }, ' ')\n  ) : '';\n}\n\nexport const randomColorGenerator = () => {\n  const array = [];\n  const letters = ['a', 'b', 'c', 'd', 'e', 'f'];\n  let alphanumeric;\n  for (let i = 0; i < 6; i++) {\n    alphanumeric = Math.random() <= 0.5 ?\n      Math.floor(Math.random() * 10) :\n      letters[Math.floor(Math.random() * 6)]\n    array.push(alphanumeric);\n  }\n  return array.reduce((acc, current) => `${acc}${current}`, '#');\n}","import { Fragment, useContext } from 'react';\nimport { MessagesContext } from './translations/messages';\n\nconst StopPositions = ({\n  colorObj,\n  colorIndex,\n  stopPercentChangeHandler,\n  addOrRemoveStopPositionHandler\n}) => {\n  const {\n    ADD,\n    X,\n    FIRST,\n    SECOND\n  } = useContext(MessagesContext);\n\n  const stopPositionsLength = colorObj.stopPositions.length;\nreturn (\n  <div>\n    <button\n      onClick={addOrRemoveStopPositionHandler(colorIndex, true)}\n      disabled={stopPositionsLength === 2}\n      data-testid={`color-${colorIndex}-add-stop-position`}\n    >{ADD}</button>\n    {colorObj.stopPositions.map((position, j) => {\n      return (\n        <Fragment key={j}>\n          <input\n            type=\"number\"\n            name={`stop-position-${j}-color-${colorIndex}`}\n            id={`stop-position-${j}-color-${colorIndex}`}\n            value={stopPositionsLength === 0 ? '' : Math.trunc(position * 100)}\n            onChange={stopPercentChangeHandler(colorIndex, j)}\n            min=\"0\"\n            max=\"100\"\n            data-testid={`stop-position-${j}-color-${colorIndex}`}\n          ></input>\n          <label\n            htmlFor={`stop-position-${j}-color-${colorIndex}`}\n          >\n            {j === 0 ? FIRST : SECOND}\n          </label>\n          <button\n            onClick={addOrRemoveStopPositionHandler(colorIndex, false, j)}\n            data-testid={`stop-position-${j}-color-${colorIndex}-delete-button`}\n          >{X}</button>\n        </Fragment>\n      );\n    })}\n  </div>\n);\n};\n\nexport default StopPositions;","import StopPositions from './StopPositions';\nimport { inputPattern } from './constants/gradient-constants';\n\nconst Color = ({\n  colorObj,\n  colorIndex,\n  addOrRemoveStopPositionHandler,\n  stopPercentChangeHandler,\n  deleteColor,\n  inputChangeHandler,\n  isDisabled\n}) => {\n  return (\n    <>\n      <label htmlFor={`color-${colorIndex}-text-input`}>{`color-${colorIndex}`}</label>\n      <input\n        id={`color-${colorIndex}-text-input`}\n        type=\"text\"\n        name={`color-${colorIndex}-text-input`}\n        value={colorObj.color}\n        onInput={inputChangeHandler(colorIndex)}\n        pattern={inputPattern}\n      />\n      <div>\n        <label htmlFor={`color-${colorIndex}-color-picker`}></label>\n        <input\n          id={`color-${colorIndex}-color-picker`}\n          type=\"color\"\n          name={`color-${colorIndex}-color-picker`}\n          value={colorObj.color}\n          onInput={inputChangeHandler(colorIndex)}\n          data-testid={`color-${colorIndex}-color-picker`}\n        />\n      </div>\n      <StopPositions\n        colorObj={colorObj}\n        colorIndex={colorIndex}\n        addOrRemoveStopPositionHandler={addOrRemoveStopPositionHandler}\n        stopPercentChangeHandler={stopPercentChangeHandler}\n      />\n      <button\n        disabled={isDisabled}\n        onClick={deleteColor(colorIndex)}\n        data-testid={`color-${colorIndex}-delete-button`}\n      >x</button>\n    </>\n  );\n};\n\nexport default Color;\n","import React, { useContext } from 'react';\nimport Color from './Color';\nimport { MessagesContext } from './translations/messages';\nimport './Colors.css';\n\nconst Colors = ({\n  colors,\n  addOrRemoveStopPositionHandler,\n  stopPercentChangeHandler,\n  deleteColor,\n  inputChangeHandler\n}) => {\n  const {\n    COLOR,\n    TYPE_THE_COLOR,\n    HEXADECIMAL_FORMAT_EXPLAINER,\n    COLOR_PICKER,\n    OPTIONAL_STOP_PERCENTS,\n    DELETE_COLOR\n  } = useContext(MessagesContext);\n  return (\n    <div className=\"colors\">\n      <span>{COLOR}</span>\n      <span>\n        <div>{TYPE_THE_COLOR}</div>\n        {/* // TODO: this would be better in a popup */}\n        <div>{HEXADECIMAL_FORMAT_EXPLAINER}</div>\n      </span>\n      <span>{COLOR_PICKER}</span>\n      <span>{OPTIONAL_STOP_PERCENTS}</span>\n      <span>{DELETE_COLOR}</span>\n      {colors.map((colorObj, colorIndex, colorsArray) => {\n        return <Color\n          key={colorIndex}\n          colorObj={colorObj}\n          colorIndex={colorIndex}\n          addOrRemoveStopPositionHandler={addOrRemoveStopPositionHandler}\n          stopPercentChangeHandler={stopPercentChangeHandler}\n          deleteColor={deleteColor}\n          inputChangeHandler={inputChangeHandler}\n          isDisabled={colorsArray.length <= 2}\n        />\n      })}\n    </div>\n  );\n};\n\nexport default Colors;","import { useState, useContext } from 'react';\nimport classnames from 'classnames';\nimport './Flyout.css';\nimport {\n  randomColorGenerator,\n  makeGradientString\n} from './utils/gradient-utils';\nimport { gradientWords } from './constants/gradient-constants';\nimport Colors from './Colors';\nimport classNames from 'classnames';\nimport { MessagesContext } from './translations/messages';\n\nconst Flyout = ({\n  colors,\n  setColors,\n  addOrRemoveStopPositionHandler,\n  stopPercentChangeHandler,\n  deleteColor,\n  gradientOptions,\n  setGradientOptions\n}) => {\n  const {\n    CLOSE,\n    OPEN,\n    ADD_A_RANDOM_COLOR,\n    GRADIENT_TYPE,\n    LINEAR,\n    RADIAL,\n    CONIC,\n    DEGREES,\n    ENDING_SHAPE,\n    CIRCLE,\n    ELLIPSE,\n    SIZE,\n    CLOSEST_SIDE,\n    FARTHEST_SIDE,\n    CLOSEST_CORNER,\n    FARTHEST_CORNER,\n    X_POSITION,\n    Y_POSITION\n  } = useContext(MessagesContext);\n\n  const [isFlyoutOpen, setIsFlyoutOpen] = useState(true);\n\n  const inputChangeHandler = i => event => {\n    setColors(\n      colors.map((colorObj, index) => index === i ? {\n        ...colorObj,\n        color: event.target.value\n      } : colorObj)\n    );\n  }\n\n  const gradientString = makeGradientString(colors, gradientOptions);\n\n  const onFlyoutButtonClick = () => setIsFlyoutOpen(!isFlyoutOpen);\n\n  return (\n    <div className={classnames('flyout', {\n      'flyout--open': isFlyoutOpen,\n      'flyout--closed': !isFlyoutOpen\n    })}>\n      <button\n        className={classNames('flyout__control-button', {\n          'flyout__control-button--open': isFlyoutOpen,\n          'flyout__control-button--closed': !isFlyoutOpen,\n        })}\n        onClick={onFlyoutButtonClick}\n      >\n        {isFlyoutOpen ? CLOSE : OPEN}\n      </button>\n      <div className=\"flyout__content\">\n        <div className=\"card\">{gradientString}</div>\n        <div className=\"options card\">\n          <Colors\n            colors={colors}\n            addOrRemoveStopPositionHandler={addOrRemoveStopPositionHandler}\n            stopPercentChangeHandler={stopPercentChangeHandler}\n            deleteColor={deleteColor}\n            inputChangeHandler={inputChangeHandler}\n          />\n          <button\n            onClick={() => {\n              setColors([...colors, {\n                color: randomColorGenerator(),\n                stopPositions: []\n              }])\n            }}\n          >\n            {ADD_A_RANDOM_COLOR}\n          </button>\n          <div>\n            <label htmlFor={gradientWords.GRADIENT_TYPE}>{GRADIENT_TYPE}</label>\n            <select\n              id={gradientWords.GRADIENT_TYPE}\n              name={gradientWords.GRADIENT_TYPE}\n              value={gradientOptions.gradientType}\n              onChange={event => setGradientOptions({\n                ...gradientOptions,\n                gradientType: event.target.value\n              })}\n            >\n              <option value={gradientWords.LINEAR}>{LINEAR}</option>\n              <option value={gradientWords.RADIAL}>{RADIAL}</option>\n              <option value={gradientWords.CONIC}>{CONIC}</option>\n            </select>\n          </div>\n          <div>\n            <div>\n              <label htmlFor={gradientWords.DEGREES}>{DEGREES}</label>\n              <input\n                id={gradientWords.DEGREES}\n                type=\"number\"\n                name={gradientWords.DEGREES}\n                value={gradientOptions.degrees}\n                onChange={event => { setGradientOptions({\n                  ...gradientOptions,\n                  degrees: event.target.value\n                })}}\n                disabled={gradientOptions.gradientType === gradientWords.RADIAL}\n                min={0}\n                max={360}\n              />\n            </div>\n            <div>\n              <label htmlFor={gradientWords.ENDING_SHAPE}>{ENDING_SHAPE}</label>\n              <select\n                id={gradientWords.ENDING_SHAPE}\n                name={gradientWords.ENDING_SHAPE}\n                value={gradientOptions.endingShape}\n                onChange={event => setGradientOptions({\n                  ...gradientOptions,\n                  endingShape: event.target.value\n                })}\n                disabled={gradientOptions.gradientType !== gradientWords.RADIAL}\n              >\n                <option value=\"circle\">{CIRCLE}</option>\n                <option value=\"ellipse\">{ELLIPSE}</option>\n              </select>\n            </div>\n            <div>\n              <label htmlFor={gradientWords.SIZE}>{SIZE}</label>\n              <select\n                id={gradientWords.SIZE}\n                type=\"text\"\n                name={gradientWords.SIZE}\n                value={gradientOptions.size}\n                onChange={event => { setGradientOptions({\n                  ...gradientOptions,\n                  size: event.target.value\n                })}}\n                disabled={gradientOptions.gradientType !== gradientWords.RADIAL}\n              >\n                <option>{CLOSEST_SIDE}</option>\n                <option>{FARTHEST_SIDE}</option>\n                <option>{CLOSEST_CORNER}</option>\n                <option>{FARTHEST_CORNER}</option>\n              </select>\n            </div>\n            <div>\n              <label htmlFor={gradientWords.X_POSITION}>{X_POSITION}</label>\n              <input\n                id={gradientWords.X_POSITION}\n                type=\"number\"\n                name={gradientWords.X_POSITION}\n                value={Math.round(gradientOptions.xPosition * 100)}\n                onChange={event => {\n                  setGradientOptions({\n                    ...gradientOptions,\n                    xPosition: Number((event.target.value / 100).toFixed(2))\n                  })\n                }}\n                min={0}\n                max={100}\n                step={1}\n                disabled={gradientOptions.gradientType === gradientWords.LINEAR}\n              />\n            </div>\n            <div>\n              <label htmlFor={gradientWords.Y_POSITION}>{Y_POSITION}</label>\n              <input\n                id={gradientWords.Y_POSITION}\n                type=\"number\"\n                name={gradientWords.Y_POSITION}\n                value={Math.round(gradientOptions.yPosition * 100)}\n                onChange={event => { setGradientOptions({\n                  ...gradientOptions,\n                  yPosition: Number((event.target.value / 100).toFixed(2))\n                })}}\n                min={0}\n                max={100}\n                step={1}\n                disabled={gradientOptions.gradientType === gradientWords.LINEAR}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Flyout;\n","import './App.css';\nimport React, { useState } from 'react';\nimport {\n  defaultColors,\n  defaultGradientOptions\n} from './constants/gradient-constants';\nimport messages, { MessagesContext } from './translations/messages';\nimport Flyout from './Flyout';\nimport { makeGradientString } from './utils/gradient-utils';\n\nfunction App() {\n  const [colors, setColors] = useState(defaultColors);\n  const [gradientOptions, setGradientOptions] = useState(defaultGradientOptions);\n  const gradientString = makeGradientString(colors, gradientOptions);\n\n  const makeRandomPercentInRange = (min, max) => {\n    const minAsInteger = Math.round(min * 100);\n    const maxAsInteger = Math.round(max * 100);\n    const range = maxAsInteger - minAsInteger;\n    const percent = Math.round(\n      Math.random() * range + minAsInteger\n    ) / 100;\n    return percent;\n  }\n\n  const addOrRemoveStopPositionHandler = (colorIndexToChange, isAdd, positionToRemove) => () => {\n    const newColors = colors.map((colorObj, index) => {\n      if (index === colorIndexToChange) {\n        const stopPositions = colorObj.stopPositions;\n        let min = 0;\n          if (stopPositions.length > 0) {\n            min = stopPositions[stopPositions.length - 1];\n          } else if (index !== 0) {\n            for (let i = index - 1; i >= 0; i--) {\n              if (colors[i].stopPositions.length > 0) {\n                min = colors[i].stopPositions[colors[i].stopPositions.length - 1];\n                break;\n              }\n            }\n          }\n        let max = 1;\n          if (index !== colors.length - 1) {\n            for (let i = index + 1; i < colors.length; i++) {\n              if (colors[i].stopPositions.length > 0) {\n                max = colors[i].stopPositions[0];\n                break;\n              }\n            }\n          }\n\n        const newStopPositions = isAdd ? (\n          [...colorObj.stopPositions, makeRandomPercentInRange(min, max)]\n        ) : (\n          colorObj.stopPositions.filter((position, j) => j !== positionToRemove)\n        );\n\n        return {\n          ...colorObj,\n          stopPositions: newStopPositions\n        }\n      }\n      return colorObj;\n    });\n    setColors(newColors);\n  };\n\n  const stopPercentChangeHandler = (i, j) => event => {\n    const newColors = colors.map((colorObj, index) => {\n      if (index === i) {\n        return {\n          ...colorObj,\n          stopPositions: colorObj.stopPositions.map((position, stopPositionIndex) => {\n            return stopPositionIndex === j ? Number(event.target.value) / 100 : position\n          })\n        }\n      } else {\n        return colorObj;\n      }\n    });\n    setColors(newColors);\n  };\n\n  const deleteColor = i => () => {\n    setColors(colors.filter((color, index) => index !== i))\n  };\n\n  return (\n    <MessagesContext.Provider value={messages}>\n      <div className=\"wrapper\">\n        <Flyout\n          colors={colors}\n          setColors={setColors}\n          addOrRemoveStopPositionHandler={addOrRemoveStopPositionHandler}\n          stopPercentChangeHandler={stopPercentChangeHandler}\n          deleteColor={deleteColor}\n          gradientOptions={gradientOptions}\n          setGradientOptions={setGradientOptions}\n        />\n        <div\n          className=\"gradient\"\n          style={{ background: gradientString }}\n        >\n        </div>\n      </div>\n    </MessagesContext.Provider>\n  );\n}\n\nexport default App;\n\n// TODOs:\n  // basic deployment on github using gh-pages\n    // test suite run before deployment\n  // input validation <<< NEXT\n    // type the color\n  // convert CSS to SCSS\n  // change the color mode\n    // hexademical\n    // rgb\n    // hsl\n  // change the gradient mode\n    // repeating-linear-gradient\n    // repeating-radial-gradient\n  // add color stops\n    // identify bug with stop positions not incrementing on up / down keypress\n  // add color hints\n    // only valid between color stops\n  // inputs\n    // circle input for changing degrees\n  // polishing\n    // fonts\n    // icons\n  // mobile design","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}